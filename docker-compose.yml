services:
  db:
    image: postgres:17.4
    restart: always

    env_file:
      - .env

    volumes:
      # 1) Persistent data store:
      - dbdata:/var/lib/postgresql/data

      # 2) Initialization scripts (runs only on first init):
      - ./docker/postgres-init:/docker-entrypoint-initdb.d

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./HoloChronicles.server
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: >
        Host=db;Port=5432;
        Username=${POSTGRES_USER};
        Password=${POSTGRES_PASSWORD};
        Database=${POSTGRES_DB}
    ports:
      - "${API_PORT}:5000"

  client:
    build:
      context: ./HoloChronicles.client
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    depends_on:
      - api
    ports:
      - "${CLIENT_PORT}:80"

volumes:
  dbdata:
